CREATE USER hoteluserzzg@localhost identified BY '123123';
GRANT USAGE ON *.* TO hoteluserzzg@localhost identified BY '123123';
CREATE DATABASE IF NOT EXISTS hotelinno;
GRANT ALL PRIVILEGES ON hotelinno.* TO hoteluserzzg@localhost;

use hotelinno;

/*Room(PK:RoomID, TypeID)
RoomType(PK:RoomTypeID, RoomTypeName, Price)
Hotel(PK:HotelID, HotelName, Address, FK:CityID)
RoomBooking(PK:RBID, CheckIn, CheckOut, FK:HotelID, FK:RoomID)
User(PK:UserID, FirstName, LastName, Permissions) -- 1-client, 2-admin
RoomOrder(PK:OrderID, FK:RBID, FK:UserID)
City(PK:CityID, CityName, FK:CountryID)*/

drop table IF EXISTS RoomOrder;
drop table IF EXISTS RoomBooking;
drop table IF EXISTS User;
drop table IF EXISTS Hotel;
drop table IF EXISTS Room;
drop table IF EXISTS RoomType;
drop table IF EXISTS City;
drop table IF EXISTS Country;

create table City (
  CityID integer UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
  CityName varchar(200) NOT NULL
);

INSERT INTO City (CityName) VALUES
('Kazan'),
('Moscow'),
('New-York'),
('Atlanta'),
('Stockholm'),
('Gothenburg');

create table RoomType (
  RoomTypeID integer UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
  RoomTypeName varchar(1000) NOT NULL,
  Price integer UNSIGNED NOT NULL
);

INSERT INTO RoomType (RoomTypeName, Price) VALUES
('Econom', 100),
('Comfort', 200),
('Business', 300);

create table Room (
  RoomID integer UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
  TypeID integer UNSIGNED NOT NULL,
  FOREIGN KEY (TypeID) REFERENCES RoomType(RoomTypeID)
);

INSERT INTO Room (TypeID) VALUES
(1),
(1),
(2),
(2),
(3),
(3);

create table Hotel (
  HotelID integer UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
  HotelName varchar(200) NOT NULL,
  Address varchar(200) NOT NULL,
  CityID integer UNSIGNED NOT NULL,
  FOREIGN KEY (CityID) REFERENCES City(CityID)
);

INSERT INTO Hotel (HotelName, Address, CityID) VALUES
('KazanInn', 'Pushkina street, 101', (select CityID from city where CityName = 'Kazan')),
('Hayat', 'Pravo-Bulachnaya str., 202', (select CityID from city where CityName = 'Kazan')),
('Radison Slavyanskaya', 'Pushkina str., 303', (select CityID from city where CityName = 'Moscow')),
('Radison Kazanskaya', 'Kazan str., 303_2', (select CityID from city where CityName = 'Moscow')),
('ParkInn', 'Kremlin str., 404', (select CityID from city where CityName = 'Moscow')),
('Hilton', '5-th avenue, 505', (select CityID from city where CityName = 'New-York')),
('Hotel-Motel', 'Wall street, 606', (select CityID from city where CityName = 'New-York')),
('Hilton', 'Kazan street, 707', (select CityID from city where CityName = 'Atlanta')),
('LocalHotel', 'Russian street, 808', (select CityID from city where CityName = 'Stockholm')),
('Hilton', 'King street, 909', (select CityID from city where CityName = 'Gothenburg'));

create table User (
  UserID integer UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
  FirstName varchar(200) NOT NULL,
  LastName varchar(200) NOT NULL,
  Permissions integer UNSIGNED NOT NULL,
  Password varchar(200) NOT NULL
);

INSERT INTO User (FirstName, LastName, Permissions, Password) VALUES
('Mike', 'Tyson', 1, 'MikePass'),
('Anton', 'Zalaldinov', 2, 'AntonPass'),
('Ilya', 'Zhingalov', 2, 'IlyaPass'),
('Artem', 'Grodetskiy', 1, 'ArtemPass');

create table RoomBooking (
  RBID integer UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
  CheckIn TIMESTAMP NOT NULL,
  CheckOut TIMESTAMP NOT NULL,
  HotelID integer UNSIGNED NOT NULL,
  RoomID integer UNSIGNED NOT NULL,
  FOREIGN KEY (HotelID) REFERENCES Hotel(HotelID),
  FOREIGN KEY (RoomID) REFERENCES Room(RoomID)
);

INSERT INTO RoomBooking (CheckIn, CheckOut, HotelID, RoomID) VALUES
(20161113140000, 20161115120000, 1, 1),
(20161108140000, 20161109120000, 1, 2),
(20161110140000, 20161111120000, 1, 3),
(20161013140000, 20161017120000, 1, 4),
(20160920140000, 20160921120000, 2, 1),
(20161221140000, 20161222120000, 2, 2),
(20161223140000, 20161225120000, 2, 3),
(20160901140000, 20160902120000, 2, 4),
(20160901140000, 20160903120000, 2, 5);

create table RoomOrder (
  OrderID integer UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
  RBID integer UNSIGNED NOT NULL,
  UserID integer UNSIGNED NOT NULL,
  FOREIGN KEY (RBID) REFERENCES RoomBooking(RBID),
  FOREIGN KEY (UserID) REFERENCES User(UserID)
);